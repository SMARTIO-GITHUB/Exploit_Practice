
task2:     file format elf32-i386


Disassembly of section .init:

0804837c <_init>:
 804837c:	53                   	push   ebx
 804837d:	83 ec 08             	sub    esp,0x8
 8048380:	e8 00 00 00 00       	call   8048385 <_init+0x9>
 8048385:	5b                   	pop    ebx
 8048386:	81 c3 6f 1c 00 00    	add    ebx,0x1c6f
 804838c:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 8048392:	85 c0                	test   eax,eax
 8048394:	74 05                	je     804839b <_init+0x1f>
 8048396:	e8 55 00 00 00       	call   80483f0 <__gmon_start__@plt>
 804839b:	e8 20 01 00 00       	call   80484c0 <frame_dummy>
 80483a0:	e8 eb 02 00 00       	call   8048690 <__do_global_ctors_aux>
 80483a5:	83 c4 08             	add    esp,0x8
 80483a8:	5b                   	pop    ebx
 80483a9:	c3                   	ret    

Disassembly of section .plt:

080483b0 <printf@plt-0x10>:
 80483b0:	ff 35 f8 9f 04 08    	push   DWORD PTR ds:0x8049ff8
 80483b6:	ff 25 fc 9f 04 08    	jmp    DWORD PTR ds:0x8049ffc
 80483bc:	00 00                	add    BYTE PTR [eax],al
	...

080483c0 <printf@plt>:
 80483c0:	ff 25 00 a0 04 08    	jmp    DWORD PTR ds:0x804a000
 80483c6:	68 00 00 00 00       	push   0x0
 80483cb:	e9 e0 ff ff ff       	jmp    80483b0 <_init+0x34>

080483d0 <__stack_chk_fail@plt>:
 80483d0:	ff 25 04 a0 04 08    	jmp    DWORD PTR ds:0x804a004
 80483d6:	68 08 00 00 00       	push   0x8
 80483db:	e9 d0 ff ff ff       	jmp    80483b0 <_init+0x34>

080483e0 <puts@plt>:
 80483e0:	ff 25 08 a0 04 08    	jmp    DWORD PTR ds:0x804a008
 80483e6:	68 10 00 00 00       	push   0x10
 80483eb:	e9 c0 ff ff ff       	jmp    80483b0 <_init+0x34>

080483f0 <__gmon_start__@plt>:
 80483f0:	ff 25 0c a0 04 08    	jmp    DWORD PTR ds:0x804a00c
 80483f6:	68 18 00 00 00       	push   0x18
 80483fb:	e9 b0 ff ff ff       	jmp    80483b0 <_init+0x34>

08048400 <__libc_start_main@plt>:
 8048400:	ff 25 10 a0 04 08    	jmp    DWORD PTR ds:0x804a010
 8048406:	68 20 00 00 00       	push   0x20
 804840b:	e9 a0 ff ff ff       	jmp    80483b0 <_init+0x34>

08048410 <putchar@plt>:
 8048410:	ff 25 14 a0 04 08    	jmp    DWORD PTR ds:0x804a014
 8048416:	68 28 00 00 00       	push   0x28
 804841b:	e9 90 ff ff ff       	jmp    80483b0 <_init+0x34>

08048420 <__isoc99_scanf@plt>:
 8048420:	ff 25 18 a0 04 08    	jmp    DWORD PTR ds:0x804a018
 8048426:	68 30 00 00 00       	push   0x30
 804842b:	e9 80 ff ff ff       	jmp    80483b0 <_init+0x34>

Disassembly of section .text:

08048430 <_start>:
 8048430:	31 ed                	xor    ebp,ebp
 8048432:	5e                   	pop    esi
 8048433:	89 e1                	mov    ecx,esp
 8048435:	83 e4 f0             	and    esp,0xfffffff0
 8048438:	50                   	push   eax
 8048439:	54                   	push   esp
 804843a:	52                   	push   edx
 804843b:	68 80 86 04 08       	push   0x8048680
 8048440:	68 10 86 04 08       	push   0x8048610
 8048445:	51                   	push   ecx
 8048446:	56                   	push   esi
 8048447:	68 e4 84 04 08       	push   0x80484e4
 804844c:	e8 af ff ff ff       	call   8048400 <__libc_start_main@plt>
 8048451:	f4                   	hlt    
 8048452:	90                   	nop
 8048453:	90                   	nop
 8048454:	90                   	nop
 8048455:	90                   	nop
 8048456:	90                   	nop
 8048457:	90                   	nop
 8048458:	90                   	nop
 8048459:	90                   	nop
 804845a:	90                   	nop
 804845b:	90                   	nop
 804845c:	90                   	nop
 804845d:	90                   	nop
 804845e:	90                   	nop
 804845f:	90                   	nop

08048460 <__do_global_dtors_aux>:
 8048460:	55                   	push   ebp
 8048461:	89 e5                	mov    ebp,esp
 8048463:	53                   	push   ebx
 8048464:	83 ec 04             	sub    esp,0x4
 8048467:	80 3d 24 a0 04 08 00 	cmp    BYTE PTR ds:0x804a024,0x0
 804846e:	75 3f                	jne    80484af <__do_global_dtors_aux+0x4f>
 8048470:	a1 28 a0 04 08       	mov    eax,ds:0x804a028
 8048475:	bb 20 9f 04 08       	mov    ebx,0x8049f20
 804847a:	81 eb 1c 9f 04 08    	sub    ebx,0x8049f1c
 8048480:	c1 fb 02             	sar    ebx,0x2
 8048483:	83 eb 01             	sub    ebx,0x1
 8048486:	39 d8                	cmp    eax,ebx
 8048488:	73 1e                	jae    80484a8 <__do_global_dtors_aux+0x48>
 804848a:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 8048490:	83 c0 01             	add    eax,0x1
 8048493:	a3 28 a0 04 08       	mov    ds:0x804a028,eax
 8048498:	ff 14 85 1c 9f 04 08 	call   DWORD PTR [eax*4+0x8049f1c]
 804849f:	a1 28 a0 04 08       	mov    eax,ds:0x804a028
 80484a4:	39 d8                	cmp    eax,ebx
 80484a6:	72 e8                	jb     8048490 <__do_global_dtors_aux+0x30>
 80484a8:	c6 05 24 a0 04 08 01 	mov    BYTE PTR ds:0x804a024,0x1
 80484af:	83 c4 04             	add    esp,0x4
 80484b2:	5b                   	pop    ebx
 80484b3:	5d                   	pop    ebp
 80484b4:	c3                   	ret    
 80484b5:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 80484b9:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

080484c0 <frame_dummy>:
 80484c0:	55                   	push   ebp
 80484c1:	89 e5                	mov    ebp,esp
 80484c3:	83 ec 18             	sub    esp,0x18
 80484c6:	a1 24 9f 04 08       	mov    eax,ds:0x8049f24
 80484cb:	85 c0                	test   eax,eax
 80484cd:	74 12                	je     80484e1 <frame_dummy+0x21>
 80484cf:	b8 00 00 00 00       	mov    eax,0x0
 80484d4:	85 c0                	test   eax,eax
 80484d6:	74 09                	je     80484e1 <frame_dummy+0x21>
 80484d8:	c7 04 24 24 9f 04 08 	mov    DWORD PTR [esp],0x8049f24
 80484df:	ff d0                	call   eax
 80484e1:	c9                   	leave  
 80484e2:	c3                   	ret    
 80484e3:	90                   	nop

080484e4 <main>:
 80484e4:	55                   	push   ebp
 80484e5:	89 e5                	mov    ebp,esp
 80484e7:	57                   	push   edi
 80484e8:	56                   	push   esi
 80484e9:	83 e4 f0             	and    esp,0xfffffff0
 80484ec:	81 ec 90 00 00 00    	sub    esp,0x90
 80484f2:	65 a1 14 00 00 00    	mov    eax,gs:0x14
 80484f8:	89 84 24 8c 00 00 00 	mov    DWORD PTR [esp+0x8c],eax
 80484ff:	31 c0                	xor    eax,eax
 8048501:	b8 e0 86 04 08       	mov    eax,0x80486e0
 8048506:	89 04 24             	mov    DWORD PTR [esp],eax
 8048509:	e8 b2 fe ff ff       	call   80483c0 <printf@plt>
 804850e:	b8 e8 86 04 08       	mov    eax,0x80486e8
 8048513:	8d 54 24 1c          	lea    edx,[esp+0x1c]
 8048517:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
 804851b:	89 04 24             	mov    DWORD PTR [esp],eax
 804851e:	e8 fd fe ff ff       	call   8048420 <__isoc99_scanf@plt>
 8048523:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
 8048527:	83 f8 64             	cmp    eax,0x64
 804852a:	75 0e                	jne    804853a <main+0x56>
 804852c:	c7 04 24 eb 86 04 08 	mov    DWORD PTR [esp],0x80486eb
 8048533:	e8 a8 fe ff ff       	call   80483e0 <puts@plt>
 8048538:	eb 0c                	jmp    8048546 <main+0x62>
 804853a:	c7 04 24 f9 86 04 08 	mov    DWORD PTR [esp],0x80486f9
 8048541:	e8 9a fe ff ff       	call   80483e0 <puts@plt>
 8048546:	b8 e0 86 04 08       	mov    eax,0x80486e0
 804854b:	89 04 24             	mov    DWORD PTR [esp],eax
 804854e:	e8 6d fe ff ff       	call   80483c0 <printf@plt>
 8048553:	b8 e8 86 04 08       	mov    eax,0x80486e8
 8048558:	8d 54 24 20          	lea    edx,[esp+0x20]
 804855c:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
 8048560:	89 04 24             	mov    DWORD PTR [esp],eax
 8048563:	e8 b8 fe ff ff       	call   8048420 <__isoc99_scanf@plt>
 8048568:	c7 44 24 24 00 00 00 	mov    DWORD PTR [esp+0x24],0x0
 804856f:	00 
 8048570:	eb 12                	jmp    8048584 <main+0xa0>
 8048572:	b8 0e 87 04 08       	mov    eax,0x804870e
 8048577:	89 04 24             	mov    DWORD PTR [esp],eax
 804857a:	e8 41 fe ff ff       	call   80483c0 <printf@plt>
 804857f:	83 44 24 24 01       	add    DWORD PTR [esp+0x24],0x1
 8048584:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
 8048588:	39 44 24 24          	cmp    DWORD PTR [esp+0x24],eax
 804858c:	7c e4                	jl     8048572 <main+0x8e>
 804858e:	c7 04 24 0a 00 00 00 	mov    DWORD PTR [esp],0xa
 8048595:	e8 76 fe ff ff       	call   8048410 <putchar@plt>
 804859a:	c7 04 24 13 87 04 08 	mov    DWORD PTR [esp],0x8048713
 80485a1:	e8 3a fe ff ff       	call   80483e0 <puts@plt>
 80485a6:	b8 23 87 04 08       	mov    eax,0x8048723
 80485ab:	8d 54 24 28          	lea    edx,[esp+0x28]
 80485af:	89 54 24 04          	mov    DWORD PTR [esp+0x4],edx
 80485b3:	89 04 24             	mov    DWORD PTR [esp],eax
 80485b6:	e8 65 fe ff ff       	call   8048420 <__isoc99_scanf@plt>
 80485bb:	8d 44 24 28          	lea    eax,[esp+0x28]
 80485bf:	89 c2                	mov    edx,eax
 80485c1:	b8 26 87 04 08       	mov    eax,0x8048726
 80485c6:	b9 10 00 00 00       	mov    ecx,0x10
 80485cb:	89 d6                	mov    esi,edx
 80485cd:	89 c7                	mov    edi,eax
 80485cf:	f3 a6                	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
 80485d1:	0f 97 c2             	seta   dl
 80485d4:	0f 92 c0             	setb   al
 80485d7:	89 d1                	mov    ecx,edx
 80485d9:	28 c1                	sub    cl,al
 80485db:	89 c8                	mov    eax,ecx
 80485dd:	0f be c0             	movsx  eax,al
 80485e0:	85 c0                	test   eax,eax
 80485e2:	75 b6                	jne    804859a <main+0xb6>
 80485e4:	b8 00 00 00 00       	mov    eax,0x0
 80485e9:	8b b4 24 8c 00 00 00 	mov    esi,DWORD PTR [esp+0x8c]
 80485f0:	65 33 35 14 00 00 00 	xor    esi,DWORD PTR gs:0x14
 80485f7:	74 05                	je     80485fe <main+0x11a>
 80485f9:	e8 d2 fd ff ff       	call   80483d0 <__stack_chk_fail@plt>
 80485fe:	8d 65 f8             	lea    esp,[ebp-0x8]
 8048601:	5e                   	pop    esi
 8048602:	5f                   	pop    edi
 8048603:	5d                   	pop    ebp
 8048604:	c3                   	ret    
 8048605:	90                   	nop
 8048606:	90                   	nop
 8048607:	90                   	nop
 8048608:	90                   	nop
 8048609:	90                   	nop
 804860a:	90                   	nop
 804860b:	90                   	nop
 804860c:	90                   	nop
 804860d:	90                   	nop
 804860e:	90                   	nop
 804860f:	90                   	nop

08048610 <__libc_csu_init>:
 8048610:	55                   	push   ebp
 8048611:	57                   	push   edi
 8048612:	56                   	push   esi
 8048613:	53                   	push   ebx
 8048614:	e8 69 00 00 00       	call   8048682 <__i686.get_pc_thunk.bx>
 8048619:	81 c3 db 19 00 00    	add    ebx,0x19db
 804861f:	83 ec 1c             	sub    esp,0x1c
 8048622:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
 8048626:	8d bb 20 ff ff ff    	lea    edi,[ebx-0xe0]
 804862c:	e8 4b fd ff ff       	call   804837c <_init>
 8048631:	8d 83 20 ff ff ff    	lea    eax,[ebx-0xe0]
 8048637:	29 c7                	sub    edi,eax
 8048639:	c1 ff 02             	sar    edi,0x2
 804863c:	85 ff                	test   edi,edi
 804863e:	74 29                	je     8048669 <__libc_csu_init+0x59>
 8048640:	31 f6                	xor    esi,esi
 8048642:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 8048648:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
 804864c:	89 2c 24             	mov    DWORD PTR [esp],ebp
 804864f:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 8048653:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
 8048657:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 804865b:	ff 94 b3 20 ff ff ff 	call   DWORD PTR [ebx+esi*4-0xe0]
 8048662:	83 c6 01             	add    esi,0x1
 8048665:	39 fe                	cmp    esi,edi
 8048667:	75 df                	jne    8048648 <__libc_csu_init+0x38>
 8048669:	83 c4 1c             	add    esp,0x1c
 804866c:	5b                   	pop    ebx
 804866d:	5e                   	pop    esi
 804866e:	5f                   	pop    edi
 804866f:	5d                   	pop    ebp
 8048670:	c3                   	ret    
 8048671:	eb 0d                	jmp    8048680 <__libc_csu_fini>
 8048673:	90                   	nop
 8048674:	90                   	nop
 8048675:	90                   	nop
 8048676:	90                   	nop
 8048677:	90                   	nop
 8048678:	90                   	nop
 8048679:	90                   	nop
 804867a:	90                   	nop
 804867b:	90                   	nop
 804867c:	90                   	nop
 804867d:	90                   	nop
 804867e:	90                   	nop
 804867f:	90                   	nop

08048680 <__libc_csu_fini>:
 8048680:	f3 c3                	repz ret 

08048682 <__i686.get_pc_thunk.bx>:
 8048682:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 8048685:	c3                   	ret    
 8048686:	90                   	nop
 8048687:	90                   	nop
 8048688:	90                   	nop
 8048689:	90                   	nop
 804868a:	90                   	nop
 804868b:	90                   	nop
 804868c:	90                   	nop
 804868d:	90                   	nop
 804868e:	90                   	nop
 804868f:	90                   	nop

08048690 <__do_global_ctors_aux>:
 8048690:	55                   	push   ebp
 8048691:	89 e5                	mov    ebp,esp
 8048693:	53                   	push   ebx
 8048694:	83 ec 04             	sub    esp,0x4
 8048697:	a1 14 9f 04 08       	mov    eax,ds:0x8049f14
 804869c:	83 f8 ff             	cmp    eax,0xffffffff
 804869f:	74 13                	je     80486b4 <__do_global_ctors_aux+0x24>
 80486a1:	bb 14 9f 04 08       	mov    ebx,0x8049f14
 80486a6:	66 90                	xchg   ax,ax
 80486a8:	83 eb 04             	sub    ebx,0x4
 80486ab:	ff d0                	call   eax
 80486ad:	8b 03                	mov    eax,DWORD PTR [ebx]
 80486af:	83 f8 ff             	cmp    eax,0xffffffff
 80486b2:	75 f4                	jne    80486a8 <__do_global_ctors_aux+0x18>
 80486b4:	83 c4 04             	add    esp,0x4
 80486b7:	5b                   	pop    ebx
 80486b8:	5d                   	pop    ebp
 80486b9:	c3                   	ret    
 80486ba:	90                   	nop
 80486bb:	90                   	nop

Disassembly of section .fini:

080486bc <_fini>:
 80486bc:	53                   	push   ebx
 80486bd:	83 ec 08             	sub    esp,0x8
 80486c0:	e8 00 00 00 00       	call   80486c5 <_fini+0x9>
 80486c5:	5b                   	pop    ebx
 80486c6:	81 c3 2f 19 00 00    	add    ebx,0x192f
 80486cc:	e8 8f fd ff ff       	call   8048460 <__do_global_dtors_aux>
 80486d1:	83 c4 08             	add    esp,0x8
 80486d4:	5b                   	pop    ebx
 80486d5:	c3                   	ret    
