
task4:     file format elf32-i386


Disassembly of section .init:

000003d8 <_init>:
 3d8:	53                   	push   ebx
 3d9:	83 ec 08             	sub    esp,0x8
 3dc:	e8 cf 00 00 00       	call   4b0 <__x86.get_pc_thunk.bx>
 3e1:	81 c3 eb 1b 00 00    	add    ebx,0x1beb
 3e7:	8b 83 28 00 00 00    	mov    eax,DWORD PTR [ebx+0x28]
 3ed:	85 c0                	test   eax,eax
 3ef:	74 05                	je     3f6 <_init+0x1e>
 3f1:	e8 72 00 00 00       	call   468 <__libc_start_main@plt+0x18>
 3f6:	83 c4 08             	add    esp,0x8
 3f9:	5b                   	pop    ebx
 3fa:	c3                   	ret    

Disassembly of section .plt:

00000400 <strcmp@plt-0x10>:
 400:	ff b3 04 00 00 00    	push   DWORD PTR [ebx+0x4]
 406:	ff a3 08 00 00 00    	jmp    DWORD PTR [ebx+0x8]
 40c:	00 00                	add    BYTE PTR [eax],al
	...

00000410 <strcmp@plt>:
 410:	ff a3 0c 00 00 00    	jmp    DWORD PTR [ebx+0xc]
 416:	68 00 00 00 00       	push   0x0
 41b:	e9 e0 ff ff ff       	jmp    400 <_init+0x28>

00000420 <printf@plt>:
 420:	ff a3 10 00 00 00    	jmp    DWORD PTR [ebx+0x10]
 426:	68 08 00 00 00       	push   0x8
 42b:	e9 d0 ff ff ff       	jmp    400 <_init+0x28>

00000430 <gets@plt>:
 430:	ff a3 14 00 00 00    	jmp    DWORD PTR [ebx+0x14]
 436:	68 10 00 00 00       	push   0x10
 43b:	e9 c0 ff ff ff       	jmp    400 <_init+0x28>

00000440 <puts@plt>:
 440:	ff a3 18 00 00 00    	jmp    DWORD PTR [ebx+0x18]
 446:	68 18 00 00 00       	push   0x18
 44b:	e9 b0 ff ff ff       	jmp    400 <_init+0x28>

00000450 <__libc_start_main@plt>:
 450:	ff a3 1c 00 00 00    	jmp    DWORD PTR [ebx+0x1c]
 456:	68 20 00 00 00       	push   0x20
 45b:	e9 a0 ff ff ff       	jmp    400 <_init+0x28>

Disassembly of section .plt.got:

00000460 <.plt.got>:
 460:	ff a3 24 00 00 00    	jmp    DWORD PTR [ebx+0x24]
 466:	66 90                	xchg   ax,ax
 468:	ff a3 28 00 00 00    	jmp    DWORD PTR [ebx+0x28]
 46e:	66 90                	xchg   ax,ax

Disassembly of section .text:

00000470 <_start>:
 470:	31 ed                	xor    ebp,ebp
 472:	5e                   	pop    esi
 473:	89 e1                	mov    ecx,esp
 475:	83 e4 f0             	and    esp,0xfffffff0
 478:	50                   	push   eax
 479:	54                   	push   esp
 47a:	52                   	push   edx
 47b:	e8 22 00 00 00       	call   4a2 <_start+0x32>
 480:	81 c3 4c 1b 00 00    	add    ebx,0x1b4c
 486:	8d 83 04 e7 ff ff    	lea    eax,[ebx-0x18fc]
 48c:	50                   	push   eax
 48d:	8d 83 a4 e6 ff ff    	lea    eax,[ebx-0x195c]
 493:	50                   	push   eax
 494:	51                   	push   ecx
 495:	56                   	push   esi
 496:	ff b3 2c 00 00 00    	push   DWORD PTR [ebx+0x2c]
 49c:	e8 af ff ff ff       	call   450 <__libc_start_main@plt>
 4a1:	f4                   	hlt    
 4a2:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 4a5:	c3                   	ret    
 4a6:	66 90                	xchg   ax,ax
 4a8:	66 90                	xchg   ax,ax
 4aa:	66 90                	xchg   ax,ax
 4ac:	66 90                	xchg   ax,ax
 4ae:	66 90                	xchg   ax,ax

000004b0 <__x86.get_pc_thunk.bx>:
 4b0:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 4b3:	c3                   	ret    
 4b4:	66 90                	xchg   ax,ax
 4b6:	66 90                	xchg   ax,ax
 4b8:	66 90                	xchg   ax,ax
 4ba:	66 90                	xchg   ax,ax
 4bc:	66 90                	xchg   ax,ax
 4be:	66 90                	xchg   ax,ax

000004c0 <deregister_tm_clones>:
 4c0:	e8 e4 00 00 00       	call   5a9 <__x86.get_pc_thunk.dx>
 4c5:	81 c2 07 1b 00 00    	add    edx,0x1b07
 4cb:	8d 8a 3c 00 00 00    	lea    ecx,[edx+0x3c]
 4d1:	8d 82 3c 00 00 00    	lea    eax,[edx+0x3c]
 4d7:	39 c8                	cmp    eax,ecx
 4d9:	74 1d                	je     4f8 <deregister_tm_clones+0x38>
 4db:	8b 82 20 00 00 00    	mov    eax,DWORD PTR [edx+0x20]
 4e1:	85 c0                	test   eax,eax
 4e3:	74 13                	je     4f8 <deregister_tm_clones+0x38>
 4e5:	55                   	push   ebp
 4e6:	89 e5                	mov    ebp,esp
 4e8:	83 ec 14             	sub    esp,0x14
 4eb:	51                   	push   ecx
 4ec:	ff d0                	call   eax
 4ee:	83 c4 10             	add    esp,0x10
 4f1:	c9                   	leave  
 4f2:	c3                   	ret    
 4f3:	90                   	nop
 4f4:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 4f8:	f3 c3                	repz ret 
 4fa:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]

00000500 <register_tm_clones>:
 500:	e8 a4 00 00 00       	call   5a9 <__x86.get_pc_thunk.dx>
 505:	81 c2 c7 1a 00 00    	add    edx,0x1ac7
 50b:	55                   	push   ebp
 50c:	8d 8a 3c 00 00 00    	lea    ecx,[edx+0x3c]
 512:	8d 82 3c 00 00 00    	lea    eax,[edx+0x3c]
 518:	29 c8                	sub    eax,ecx
 51a:	89 e5                	mov    ebp,esp
 51c:	53                   	push   ebx
 51d:	c1 f8 02             	sar    eax,0x2
 520:	89 c3                	mov    ebx,eax
 522:	83 ec 04             	sub    esp,0x4
 525:	c1 eb 1f             	shr    ebx,0x1f
 528:	01 d8                	add    eax,ebx
 52a:	d1 f8                	sar    eax,1
 52c:	74 14                	je     542 <register_tm_clones+0x42>
 52e:	8b 92 30 00 00 00    	mov    edx,DWORD PTR [edx+0x30]
 534:	85 d2                	test   edx,edx
 536:	74 0a                	je     542 <register_tm_clones+0x42>
 538:	83 ec 08             	sub    esp,0x8
 53b:	50                   	push   eax
 53c:	51                   	push   ecx
 53d:	ff d2                	call   edx
 53f:	83 c4 10             	add    esp,0x10
 542:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
 545:	c9                   	leave  
 546:	c3                   	ret    
 547:	89 f6                	mov    esi,esi
 549:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

00000550 <__do_global_dtors_aux>:
 550:	55                   	push   ebp
 551:	89 e5                	mov    ebp,esp
 553:	53                   	push   ebx
 554:	e8 57 ff ff ff       	call   4b0 <__x86.get_pc_thunk.bx>
 559:	81 c3 73 1a 00 00    	add    ebx,0x1a73
 55f:	83 ec 04             	sub    esp,0x4
 562:	80 bb 3c 00 00 00 00 	cmp    BYTE PTR [ebx+0x3c],0x0
 569:	75 27                	jne    592 <__do_global_dtors_aux+0x42>
 56b:	8b 83 24 00 00 00    	mov    eax,DWORD PTR [ebx+0x24]
 571:	85 c0                	test   eax,eax
 573:	74 11                	je     586 <__do_global_dtors_aux+0x36>
 575:	83 ec 0c             	sub    esp,0xc
 578:	ff b3 38 00 00 00    	push   DWORD PTR [ebx+0x38]
 57e:	e8 dd fe ff ff       	call   460 <__libc_start_main@plt+0x10>
 583:	83 c4 10             	add    esp,0x10
 586:	e8 35 ff ff ff       	call   4c0 <deregister_tm_clones>
 58b:	c6 83 3c 00 00 00 01 	mov    BYTE PTR [ebx+0x3c],0x1
 592:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
 595:	c9                   	leave  
 596:	c3                   	ret    
 597:	89 f6                	mov    esi,esi
 599:	8d bc 27 00 00 00 00 	lea    edi,[edi+eiz*1+0x0]

000005a0 <frame_dummy>:
 5a0:	55                   	push   ebp
 5a1:	89 e5                	mov    ebp,esp
 5a3:	5d                   	pop    ebp
 5a4:	e9 57 ff ff ff       	jmp    500 <register_tm_clones>

000005a9 <__x86.get_pc_thunk.dx>:
 5a9:	8b 14 24             	mov    edx,DWORD PTR [esp]
 5ac:	c3                   	ret    

000005ad <main>:
 5ad:	8d 4c 24 04          	lea    ecx,[esp+0x4]
 5b1:	83 e4 f0             	and    esp,0xfffffff0
 5b4:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
 5b7:	55                   	push   ebp
 5b8:	89 e5                	mov    ebp,esp
 5ba:	57                   	push   edi
 5bb:	56                   	push   esi
 5bc:	53                   	push   ebx
 5bd:	51                   	push   ecx
 5be:	83 ec 48             	sub    esp,0x48
 5c1:	e8 ea fe ff ff       	call   4b0 <__x86.get_pc_thunk.bx>
 5c6:	81 c3 06 1a 00 00    	add    ebx,0x1a06
 5cc:	8d 45 b6             	lea    eax,[ebp-0x4a]
 5cf:	b9 32 00 00 00       	mov    ecx,0x32
 5d4:	be 00 00 00 00       	mov    esi,0x0
 5d9:	89 30                	mov    DWORD PTR [eax],esi
 5db:	89 74 08 fc          	mov    DWORD PTR [eax+ecx*1-0x4],esi
 5df:	8d 50 04             	lea    edx,[eax+0x4]
 5e2:	83 e2 fc             	and    edx,0xfffffffc
 5e5:	29 d0                	sub    eax,edx
 5e7:	01 c1                	add    ecx,eax
 5e9:	83 e1 fc             	and    ecx,0xfffffffc
 5ec:	c1 e9 02             	shr    ecx,0x2
 5ef:	89 d7                	mov    edi,edx
 5f1:	89 f0                	mov    eax,esi
 5f3:	f3 ab                	rep stos DWORD PTR es:[edi],eax
 5f5:	83 ec 0c             	sub    esp,0xc
 5f8:	8d 83 24 e7 ff ff    	lea    eax,[ebx-0x18dc]
 5fe:	50                   	push   eax
 5ff:	e8 1c fe ff ff       	call   420 <printf@plt>
 604:	83 c4 10             	add    esp,0x10
 607:	83 ec 0c             	sub    esp,0xc
 60a:	8d 45 b6             	lea    eax,[ebp-0x4a]
 60d:	50                   	push   eax
 60e:	e8 1d fe ff ff       	call   430 <gets@plt>
 613:	83 c4 10             	add    esp,0x10
 616:	83 ec 08             	sub    esp,0x8
 619:	8d 83 3f e7 ff ff    	lea    eax,[ebx-0x18c1]
 61f:	50                   	push   eax
 620:	8d 45 b6             	lea    eax,[ebp-0x4a]
 623:	50                   	push   eax
 624:	e8 e7 fd ff ff       	call   410 <strcmp@plt>
 629:	83 c4 10             	add    esp,0x10
 62c:	85 c0                	test   eax,eax
 62e:	75 14                	jne    644 <main+0x97>
 630:	83 ec 0c             	sub    esp,0xc
 633:	8d 83 50 e7 ff ff    	lea    eax,[ebx-0x18b0]
 639:	50                   	push   eax
 63a:	e8 01 fe ff ff       	call   440 <puts@plt>
 63f:	83 c4 10             	add    esp,0x10
 642:	eb 12                	jmp    656 <main+0xa9>
 644:	83 ec 0c             	sub    esp,0xc
 647:	8d 83 7c e7 ff ff    	lea    eax,[ebx-0x1884]
 64d:	50                   	push   eax
 64e:	e8 ed fd ff ff       	call   440 <puts@plt>
 653:	83 c4 10             	add    esp,0x10
 656:	b8 00 00 00 00       	mov    eax,0x0
 65b:	8d 65 f0             	lea    esp,[ebp-0x10]
 65e:	59                   	pop    ecx
 65f:	5b                   	pop    ebx
 660:	5e                   	pop    esi
 661:	5f                   	pop    edi
 662:	5d                   	pop    ebp
 663:	8d 61 fc             	lea    esp,[ecx-0x4]
 666:	c3                   	ret    
 667:	66 90                	xchg   ax,ax
 669:	66 90                	xchg   ax,ax
 66b:	66 90                	xchg   ax,ax
 66d:	66 90                	xchg   ax,ax
 66f:	90                   	nop

00000670 <__libc_csu_init>:
 670:	55                   	push   ebp
 671:	57                   	push   edi
 672:	56                   	push   esi
 673:	53                   	push   ebx
 674:	e8 37 fe ff ff       	call   4b0 <__x86.get_pc_thunk.bx>
 679:	81 c3 53 19 00 00    	add    ebx,0x1953
 67f:	83 ec 0c             	sub    esp,0xc
 682:	8b 6c 24 20          	mov    ebp,DWORD PTR [esp+0x20]
 686:	8d b3 04 ff ff ff    	lea    esi,[ebx-0xfc]
 68c:	e8 47 fd ff ff       	call   3d8 <_init>
 691:	8d 83 00 ff ff ff    	lea    eax,[ebx-0x100]
 697:	29 c6                	sub    esi,eax
 699:	c1 fe 02             	sar    esi,0x2
 69c:	85 f6                	test   esi,esi
 69e:	74 25                	je     6c5 <__libc_csu_init+0x55>
 6a0:	31 ff                	xor    edi,edi
 6a2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 6a8:	83 ec 04             	sub    esp,0x4
 6ab:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 6af:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 6b3:	55                   	push   ebp
 6b4:	ff 94 bb 00 ff ff ff 	call   DWORD PTR [ebx+edi*4-0x100]
 6bb:	83 c7 01             	add    edi,0x1
 6be:	83 c4 10             	add    esp,0x10
 6c1:	39 fe                	cmp    esi,edi
 6c3:	75 e3                	jne    6a8 <__libc_csu_init+0x38>
 6c5:	83 c4 0c             	add    esp,0xc
 6c8:	5b                   	pop    ebx
 6c9:	5e                   	pop    esi
 6ca:	5f                   	pop    edi
 6cb:	5d                   	pop    ebp
 6cc:	c3                   	ret    
 6cd:	8d 76 00             	lea    esi,[esi+0x0]

000006d0 <__libc_csu_fini>:
 6d0:	f3 c3                	repz ret 

Disassembly of section .fini:

000006d4 <_fini>:
 6d4:	53                   	push   ebx
 6d5:	83 ec 08             	sub    esp,0x8
 6d8:	e8 d3 fd ff ff       	call   4b0 <__x86.get_pc_thunk.bx>
 6dd:	81 c3 ef 18 00 00    	add    ebx,0x18ef
 6e3:	83 c4 08             	add    esp,0x8
 6e6:	5b                   	pop    ebx
 6e7:	c3                   	ret    
